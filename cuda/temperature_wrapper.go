package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/barnex/cuda5/cu"
	"unsafe"
)

var addtemperature_code cu.Function

type addtemperature_args struct {
	arg_B            unsafe.Pointer
	arg_noise        unsafe.Pointer
	arg_kB2_VgammaDt float32
	arg_tempRedLUT   unsafe.Pointer
	arg_regions      unsafe.Pointer
	arg_N            int
	argptr           [6]unsafe.Pointer
}

// Wrapper for addtemperature CUDA kernel, asynchronous.
func k_addtemperature_async(B unsafe.Pointer, noise unsafe.Pointer, kB2_VgammaDt float32, tempRedLUT unsafe.Pointer, regions unsafe.Pointer, N int, cfg *config, str cu.Stream) {
	if synchronous { // debug
		Sync()
	}

	if addtemperature_code == 0 {
		addtemperature_code = fatbinLoad(addtemperature_map, "addtemperature")
	}

	var _a_ addtemperature_args

	_a_.arg_B = B
	_a_.argptr[0] = unsafe.Pointer(&_a_.arg_B)
	_a_.arg_noise = noise
	_a_.argptr[1] = unsafe.Pointer(&_a_.arg_noise)
	_a_.arg_kB2_VgammaDt = kB2_VgammaDt
	_a_.argptr[2] = unsafe.Pointer(&_a_.arg_kB2_VgammaDt)
	_a_.arg_tempRedLUT = tempRedLUT
	_a_.argptr[3] = unsafe.Pointer(&_a_.arg_tempRedLUT)
	_a_.arg_regions = regions
	_a_.argptr[4] = unsafe.Pointer(&_a_.arg_regions)
	_a_.arg_N = N
	_a_.argptr[5] = unsafe.Pointer(&_a_.arg_N)

	args := _a_.argptr[:]
	cu.LaunchKernel(addtemperature_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, str, args)

	if synchronous { // debug
		Sync()
	}
}

// Wrapper for addtemperature CUDA kernel, synchronized.
func k_addtemperature_sync(B unsafe.Pointer, noise unsafe.Pointer, kB2_VgammaDt float32, tempRedLUT unsafe.Pointer, regions unsafe.Pointer, N int, cfg *config) {
	Sync()
	k_addtemperature_async(B, noise, kB2_VgammaDt, tempRedLUT, regions, N, cfg, stream0)
	Sync()
}

var addtemperature_map = map[int]string{0: "",
	20: addtemperature_ptx_20,
	30: addtemperature_ptx_30,
	35: addtemperature_ptx_35}

const (
	addtemperature_ptx_20 = `
.version 3.2
.target sm_20
.address_size 64


.visible .entry addtemperature(
	.param .u64 addtemperature_param_0,
	.param .u64 addtemperature_param_1,
	.param .f32 addtemperature_param_2,
	.param .u64 addtemperature_param_3,
	.param .u64 addtemperature_param_4,
	.param .u32 addtemperature_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<9>;
	.reg .f32 	%f<8>;
	.reg .s64 	%rd<17>;


	ld.param.u64 	%rd5, [addtemperature_param_0];
	ld.param.u64 	%rd6, [addtemperature_param_1];
	ld.param.f32 	%f1, [addtemperature_param_2];
	ld.param.u64 	%rd7, [addtemperature_param_3];
	ld.param.u64 	%rd8, [addtemperature_param_4];
	ld.param.u32 	%r2, [addtemperature_param_5];
	cvta.to.global.u64 	%rd1, %rd5;
	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd7;
	cvta.to.global.u64 	%rd4, %rd8;
	.loc 1 6 1
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	.loc 1 7 1
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_2;

	cvt.s64.s32	%rd9, %r1;
	add.s64 	%rd10, %rd4, %rd9;
	ld.global.s8 	%rd11, [%rd10];
	shl.b64 	%rd12, %rd11, 2;
	add.s64 	%rd13, %rd3, %rd12;
	mul.wide.s32 	%rd14, %r1, 4;
	add.s64 	%rd15, %rd2, %rd14;
	.loc 1 9 1
	ld.global.f32 	%f2, [%rd13];
	.loc 1 10 1
	mul.f32 	%f3, %f2, %f1;
	.loc 2 3055 10
	sqrt.rn.f32 	%f4, %f3;
	.loc 1 10 1
	ld.global.f32 	%f5, [%rd15];
	add.s64 	%rd16, %rd1, %rd14;
	.loc 1 10 96
	ld.global.f32 	%f6, [%rd16];
	fma.rn.f32 	%f7, %f5, %f4, %f6;
	st.global.f32 	[%rd16], %f7;

BB0_2:
	.loc 1 12 2
	ret;
}


`
	addtemperature_ptx_30 = `
.version 3.2
.target sm_30
.address_size 64


.visible .entry addtemperature(
	.param .u64 addtemperature_param_0,
	.param .u64 addtemperature_param_1,
	.param .f32 addtemperature_param_2,
	.param .u64 addtemperature_param_3,
	.param .u64 addtemperature_param_4,
	.param .u32 addtemperature_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<9>;
	.reg .f32 	%f<8>;
	.reg .s64 	%rd<17>;


	ld.param.u64 	%rd5, [addtemperature_param_0];
	ld.param.u64 	%rd6, [addtemperature_param_1];
	ld.param.f32 	%f1, [addtemperature_param_2];
	ld.param.u64 	%rd7, [addtemperature_param_3];
	ld.param.u64 	%rd8, [addtemperature_param_4];
	ld.param.u32 	%r2, [addtemperature_param_5];
	cvta.to.global.u64 	%rd1, %rd5;
	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd7;
	cvta.to.global.u64 	%rd4, %rd8;
	.loc 1 6 1
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	.loc 1 7 1
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_2;

	cvt.s64.s32	%rd9, %r1;
	add.s64 	%rd10, %rd4, %rd9;
	ld.global.s8 	%rd11, [%rd10];
	shl.b64 	%rd12, %rd11, 2;
	add.s64 	%rd13, %rd3, %rd12;
	mul.wide.s32 	%rd14, %r1, 4;
	add.s64 	%rd15, %rd2, %rd14;
	.loc 1 9 1
	ld.global.f32 	%f2, [%rd13];
	.loc 1 10 1
	mul.f32 	%f3, %f2, %f1;
	.loc 2 3055 10
	sqrt.rn.f32 	%f4, %f3;
	.loc 1 10 1
	ld.global.f32 	%f5, [%rd15];
	add.s64 	%rd16, %rd1, %rd14;
	.loc 1 10 96
	ld.global.f32 	%f6, [%rd16];
	fma.rn.f32 	%f7, %f5, %f4, %f6;
	st.global.f32 	[%rd16], %f7;

BB0_2:
	.loc 1 12 2
	ret;
}


`
	addtemperature_ptx_35 = `
.version 3.2
.target sm_35
.address_size 64


.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	.loc 2 66 3
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	.loc 2 71 3
	ret;
}

.visible .entry addtemperature(
	.param .u64 addtemperature_param_0,
	.param .u64 addtemperature_param_1,
	.param .f32 addtemperature_param_2,
	.param .u64 addtemperature_param_3,
	.param .u64 addtemperature_param_4,
	.param .u32 addtemperature_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<9>;
	.reg .f32 	%f<8>;
	.reg .s64 	%rd<18>;


	ld.param.u64 	%rd5, [addtemperature_param_0];
	ld.param.u64 	%rd6, [addtemperature_param_1];
	ld.param.f32 	%f1, [addtemperature_param_2];
	ld.param.u64 	%rd7, [addtemperature_param_3];
	ld.param.u64 	%rd8, [addtemperature_param_4];
	ld.param.u32 	%r2, [addtemperature_param_5];
	cvta.to.global.u64 	%rd1, %rd5;
	cvta.to.global.u64 	%rd2, %rd6;
	cvta.to.global.u64 	%rd3, %rd7;
	cvta.to.global.u64 	%rd4, %rd8;
	.loc 1 6 1
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	.loc 1 7 1
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB2_2;

	cvt.s64.s32	%rd9, %r1;
	add.s64 	%rd10, %rd4, %rd9;
	.loc 1 8 1
	ld.global.nc.u8 	%rs1, [%rd10];
	cvt.u64.u16	%rd11, %rs1;
	cvt.s64.s8 	%rd12, %rd11;
	shl.b64 	%rd13, %rd12, 2;
	add.s64 	%rd14, %rd3, %rd13;
	mul.wide.s32 	%rd15, %r1, 4;
	add.s64 	%rd16, %rd2, %rd15;
	.loc 1 9 1
	ld.global.nc.f32 	%f2, [%rd14];
	.loc 1 10 1
	mul.f32 	%f3, %f2, %f1;
	.loc 3 3055 10
	sqrt.rn.f32 	%f4, %f3;
	.loc 1 10 1
	ld.global.nc.f32 	%f5, [%rd16];
	add.s64 	%rd17, %rd1, %rd15;
	.loc 1 10 96
	ld.global.f32 	%f6, [%rd17];
	fma.rn.f32 	%f7, %f5, %f4, %f6;
	st.global.f32 	[%rd17], %f7;

BB2_2:
	.loc 1 12 2
	ret;
}


`
)
