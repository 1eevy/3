package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/barnex/cuda5/cu"
	"unsafe"
)

var dotproduct_code cu.Function

type dotproduct_args struct {
	arg_dst unsafe.Pointer
	arg_ax  unsafe.Pointer
	arg_ay  unsafe.Pointer
	arg_az  unsafe.Pointer
	arg_bx  unsafe.Pointer
	arg_by  unsafe.Pointer
	arg_bz  unsafe.Pointer
	arg_vol unsafe.Pointer
	arg_N   int
	argptr  [9]unsafe.Pointer
}

// Wrapper for dotproduct CUDA kernel, asynchronous.
func k_dotproduct_async(dst unsafe.Pointer, ax unsafe.Pointer, ay unsafe.Pointer, az unsafe.Pointer, bx unsafe.Pointer, by unsafe.Pointer, bz unsafe.Pointer, vol unsafe.Pointer, N int, cfg *config, str cu.Stream) {
	if synchronous { // debug
		Sync()
	}

	if dotproduct_code == 0 {
		dotproduct_code = fatbinLoad(dotproduct_map, "dotproduct")
	}

	var _a_ dotproduct_args

	_a_.arg_dst = dst
	_a_.argptr[0] = unsafe.Pointer(&_a_.arg_dst)
	_a_.arg_ax = ax
	_a_.argptr[1] = unsafe.Pointer(&_a_.arg_ax)
	_a_.arg_ay = ay
	_a_.argptr[2] = unsafe.Pointer(&_a_.arg_ay)
	_a_.arg_az = az
	_a_.argptr[3] = unsafe.Pointer(&_a_.arg_az)
	_a_.arg_bx = bx
	_a_.argptr[4] = unsafe.Pointer(&_a_.arg_bx)
	_a_.arg_by = by
	_a_.argptr[5] = unsafe.Pointer(&_a_.arg_by)
	_a_.arg_bz = bz
	_a_.argptr[6] = unsafe.Pointer(&_a_.arg_bz)
	_a_.arg_vol = vol
	_a_.argptr[7] = unsafe.Pointer(&_a_.arg_vol)
	_a_.arg_N = N
	_a_.argptr[8] = unsafe.Pointer(&_a_.arg_N)

	args := _a_.argptr[:]
	cu.LaunchKernel(dotproduct_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, str, args)

	if synchronous { // debug
		Sync()
	}
}

// Wrapper for dotproduct CUDA kernel, synchronized.
func k_dotproduct_sync(dst unsafe.Pointer, ax unsafe.Pointer, ay unsafe.Pointer, az unsafe.Pointer, bx unsafe.Pointer, by unsafe.Pointer, bz unsafe.Pointer, vol unsafe.Pointer, N int, cfg *config) {
	Sync()
	k_dotproduct_async(dst, ax, ay, az, bx, by, bz, vol, N, cfg, stream0)
	Sync()
}

var dotproduct_map = map[int]string{0: "",
	20: dotproduct_ptx_20,
	30: dotproduct_ptx_30,
	35: dotproduct_ptx_35}

const (
	dotproduct_ptx_20 = `
.version 3.2
.target sm_20
.address_size 64


.visible .entry dotproduct(
	.param .u64 dotproduct_param_0,
	.param .u64 dotproduct_param_1,
	.param .u64 dotproduct_param_2,
	.param .u64 dotproduct_param_3,
	.param .u64 dotproduct_param_4,
	.param .u64 dotproduct_param_5,
	.param .u64 dotproduct_param_6,
	.param .u64 dotproduct_param_7,
	.param .u32 dotproduct_param_8
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<9>;
	.reg .f32 	%f<15>;
	.reg .s64 	%rd<27>;


	ld.param.u64 	%rd10, [dotproduct_param_0];
	ld.param.u64 	%rd11, [dotproduct_param_1];
	ld.param.u64 	%rd12, [dotproduct_param_2];
	ld.param.u64 	%rd13, [dotproduct_param_3];
	ld.param.u64 	%rd14, [dotproduct_param_4];
	ld.param.u64 	%rd15, [dotproduct_param_5];
	ld.param.u64 	%rd16, [dotproduct_param_6];
	ld.param.u64 	%rd9, [dotproduct_param_7];
	ld.param.u32 	%r2, [dotproduct_param_8];
	cvta.to.global.u64 	%rd1, %rd10;
	cvta.to.global.u64 	%rd2, %rd16;
	cvta.to.global.u64 	%rd3, %rd15;
	cvta.to.global.u64 	%rd4, %rd14;
	cvta.to.global.u64 	%rd5, %rd13;
	cvta.to.global.u64 	%rd6, %rd12;
	cvta.to.global.u64 	%rd7, %rd11;
	cvta.to.global.u64 	%rd8, %rd9;
	.loc 1 11 1
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	.loc 1 12 1
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_5;

	.loc 1 13 1
	setp.ne.s64	%p2, %rd9, 0;
	@%p2 bra 	BB0_3;

	mov.f32 	%f14, 0f3F800000;
	bra.uni 	BB0_4;

BB0_3:
	mul.wide.s32 	%rd17, %r1, 4;
	add.s64 	%rd18, %rd8, %rd17;
	.loc 1 13 1
	ld.global.f32 	%f14, [%rd18];

BB0_4:
	mul.wide.s32 	%rd19, %r1, 4;
	add.s64 	%rd20, %rd7, %rd19;
	add.s64 	%rd21, %rd6, %rd19;
	add.s64 	%rd22, %rd5, %rd19;
	add.s64 	%rd23, %rd4, %rd19;
	add.s64 	%rd24, %rd3, %rd19;
	add.s64 	%rd25, %rd2, %rd19;
	.loc 1 15 1
	ld.global.f32 	%f4, [%rd23];
	.loc 1 14 1
	ld.global.f32 	%f5, [%rd20];
	.loc 1 15 1
	ld.global.f32 	%f6, [%rd24];
	.loc 1 14 1
	ld.global.f32 	%f7, [%rd21];
	.loc 1 16 1
	mul.f32 	%f8, %f7, %f6;
	fma.rn.f32 	%f9, %f5, %f4, %f8;
	.loc 1 15 1
	ld.global.f32 	%f10, [%rd25];
	.loc 1 14 1
	ld.global.f32 	%f11, [%rd22];
	.loc 1 16 1
	fma.rn.f32 	%f12, %f11, %f10, %f9;
	mul.f32 	%f13, %f14, %f12;
	add.s64 	%rd26, %rd1, %rd19;
	.loc 1 16 1
	st.global.f32 	[%rd26], %f13;

BB0_5:
	.loc 1 18 2
	ret;
}


`
	dotproduct_ptx_30 = `
.version 3.2
.target sm_30
.address_size 64


.visible .entry dotproduct(
	.param .u64 dotproduct_param_0,
	.param .u64 dotproduct_param_1,
	.param .u64 dotproduct_param_2,
	.param .u64 dotproduct_param_3,
	.param .u64 dotproduct_param_4,
	.param .u64 dotproduct_param_5,
	.param .u64 dotproduct_param_6,
	.param .u64 dotproduct_param_7,
	.param .u32 dotproduct_param_8
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<9>;
	.reg .f32 	%f<15>;
	.reg .s64 	%rd<27>;


	ld.param.u64 	%rd10, [dotproduct_param_0];
	ld.param.u64 	%rd11, [dotproduct_param_1];
	ld.param.u64 	%rd12, [dotproduct_param_2];
	ld.param.u64 	%rd13, [dotproduct_param_3];
	ld.param.u64 	%rd14, [dotproduct_param_4];
	ld.param.u64 	%rd15, [dotproduct_param_5];
	ld.param.u64 	%rd16, [dotproduct_param_6];
	ld.param.u64 	%rd9, [dotproduct_param_7];
	ld.param.u32 	%r2, [dotproduct_param_8];
	cvta.to.global.u64 	%rd1, %rd10;
	cvta.to.global.u64 	%rd2, %rd16;
	cvta.to.global.u64 	%rd3, %rd15;
	cvta.to.global.u64 	%rd4, %rd14;
	cvta.to.global.u64 	%rd5, %rd13;
	cvta.to.global.u64 	%rd6, %rd12;
	cvta.to.global.u64 	%rd7, %rd11;
	cvta.to.global.u64 	%rd8, %rd9;
	.loc 1 11 1
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	.loc 1 12 1
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_5;

	.loc 1 13 1
	setp.ne.s64	%p2, %rd9, 0;
	@%p2 bra 	BB0_3;

	mov.f32 	%f14, 0f3F800000;
	bra.uni 	BB0_4;

BB0_3:
	mul.wide.s32 	%rd17, %r1, 4;
	add.s64 	%rd18, %rd8, %rd17;
	.loc 1 13 1
	ld.global.f32 	%f14, [%rd18];

BB0_4:
	mul.wide.s32 	%rd19, %r1, 4;
	add.s64 	%rd20, %rd7, %rd19;
	add.s64 	%rd21, %rd6, %rd19;
	add.s64 	%rd22, %rd5, %rd19;
	add.s64 	%rd23, %rd4, %rd19;
	add.s64 	%rd24, %rd3, %rd19;
	add.s64 	%rd25, %rd2, %rd19;
	.loc 1 15 1
	ld.global.f32 	%f4, [%rd23];
	.loc 1 14 1
	ld.global.f32 	%f5, [%rd20];
	.loc 1 15 1
	ld.global.f32 	%f6, [%rd24];
	.loc 1 14 1
	ld.global.f32 	%f7, [%rd21];
	.loc 1 16 1
	mul.f32 	%f8, %f7, %f6;
	fma.rn.f32 	%f9, %f5, %f4, %f8;
	.loc 1 15 1
	ld.global.f32 	%f10, [%rd25];
	.loc 1 14 1
	ld.global.f32 	%f11, [%rd22];
	.loc 1 16 1
	fma.rn.f32 	%f12, %f11, %f10, %f9;
	mul.f32 	%f13, %f14, %f12;
	add.s64 	%rd26, %rd1, %rd19;
	.loc 1 16 1
	st.global.f32 	[%rd26], %f13;

BB0_5:
	.loc 1 18 2
	ret;
}


`
	dotproduct_ptx_35 = `
.version 3.2
.target sm_35
.address_size 64


.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	.loc 2 66 3
	ret;
}

.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	.loc 2 71 3
	ret;
}

.visible .entry dotproduct(
	.param .u64 dotproduct_param_0,
	.param .u64 dotproduct_param_1,
	.param .u64 dotproduct_param_2,
	.param .u64 dotproduct_param_3,
	.param .u64 dotproduct_param_4,
	.param .u64 dotproduct_param_5,
	.param .u64 dotproduct_param_6,
	.param .u64 dotproduct_param_7,
	.param .u32 dotproduct_param_8
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<9>;
	.reg .f32 	%f<15>;
	.reg .s64 	%rd<27>;


	ld.param.u64 	%rd10, [dotproduct_param_0];
	ld.param.u64 	%rd11, [dotproduct_param_1];
	ld.param.u64 	%rd12, [dotproduct_param_2];
	ld.param.u64 	%rd13, [dotproduct_param_3];
	ld.param.u64 	%rd14, [dotproduct_param_4];
	ld.param.u64 	%rd15, [dotproduct_param_5];
	ld.param.u64 	%rd16, [dotproduct_param_6];
	ld.param.u64 	%rd9, [dotproduct_param_7];
	ld.param.u32 	%r2, [dotproduct_param_8];
	cvta.to.global.u64 	%rd1, %rd10;
	cvta.to.global.u64 	%rd2, %rd16;
	cvta.to.global.u64 	%rd3, %rd15;
	cvta.to.global.u64 	%rd4, %rd14;
	cvta.to.global.u64 	%rd5, %rd13;
	cvta.to.global.u64 	%rd6, %rd12;
	cvta.to.global.u64 	%rd7, %rd11;
	cvta.to.global.u64 	%rd8, %rd9;
	.loc 1 11 1
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r3, %r4, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	.loc 1 12 1
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB2_5;

	.loc 1 13 1
	setp.ne.s64	%p2, %rd9, 0;
	@%p2 bra 	BB2_3;

	mov.f32 	%f14, 0f3F800000;
	bra.uni 	BB2_4;

BB2_3:
	mul.wide.s32 	%rd17, %r1, 4;
	add.s64 	%rd18, %rd8, %rd17;
	.loc 1 13 1
	ld.global.nc.f32 	%f14, [%rd18];

BB2_4:
	mul.wide.s32 	%rd19, %r1, 4;
	add.s64 	%rd20, %rd7, %rd19;
	add.s64 	%rd21, %rd6, %rd19;
	add.s64 	%rd22, %rd5, %rd19;
	add.s64 	%rd23, %rd4, %rd19;
	add.s64 	%rd24, %rd3, %rd19;
	add.s64 	%rd25, %rd2, %rd19;
	.loc 1 15 1
	ld.global.nc.f32 	%f4, [%rd23];
	.loc 1 14 1
	ld.global.nc.f32 	%f5, [%rd20];
	.loc 1 15 1
	ld.global.nc.f32 	%f6, [%rd24];
	.loc 1 14 1
	ld.global.nc.f32 	%f7, [%rd21];
	.loc 1 16 1
	mul.f32 	%f8, %f7, %f6;
	fma.rn.f32 	%f9, %f5, %f4, %f8;
	.loc 1 15 1
	ld.global.nc.f32 	%f10, [%rd25];
	.loc 1 14 1
	ld.global.nc.f32 	%f11, [%rd22];
	.loc 1 16 1
	fma.rn.f32 	%f12, %f11, %f10, %f9;
	mul.f32 	%f13, %f14, %f12;
	add.s64 	%rd26, %rd1, %rd19;
	.loc 1 16 1
	st.global.f32 	[%rd26], %f13;

BB2_5:
	.loc 1 18 2
	ret;
}


`
)
